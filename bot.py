import pandas as pd
import os
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes, CommandHandler

TOKEN = os.getenv("BOT_TOKEN")

# –ó–∞–≥—Ä—É–∂–∞–µ–º Excel (–µ—Å–ª–∏ —Ñ–∞–π–ª –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏)
data = pd.read_excel("data.xlsx")

# –°–æ–∑–¥–∞—ë–º —Å–ª–æ–≤–∞—Ä—å –ë–° -> {name, lat, lon}
stations = {}
for _, row in data.iterrows():
    bs = str(row["–ë–°"]).strip()
    name = str(row["–ù–∞–∑–≤–∞–Ω–∏–µ"]).strip()
    try:
        lat = float(row["–®–∏—Ä–æ—Ç–∞"])
        lon = float(row["–î–æ–ª–≥–æ—Ç–∞"])
        stations[bs] = {"name": name, "lat": lat, "lon": lon}
    except (ValueError, TypeError):
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ë–°: {bs}")

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ë–°")

# –û—Ç–≤–µ—Ç –Ω–∞ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()
    if user_input in stations:
        station = stations[user_input]
        lat, lon = station["lat"], station["lon"]
        name = station["name"]

        await update.message.reply_text(f"üè∑ –ë–°: {name}")
        map_url = f"https://yandex.ru/maps/?pt={lon},{lat}&z=16&l=map"
        await update.message.reply_text(f"üó∫ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—ã:\n{map_url}")
    else:
        await update.message.reply_text("‚ùå –ë–° –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å –Ω–æ–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    await app.run_polling()

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
