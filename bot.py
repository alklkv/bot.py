import pandas as pd
import os
import asyncio
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TOKEN = os.getenv("BOT_TOKEN")

# –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
data = pd.read_excel("data.xlsx")

stations = {}
for _, row in data.iterrows():
    bs = str(row["–ë–°"]).strip()
    name = str(row["–ù–∞–∑–≤–∞–Ω–∏–µ"]).strip()
    try:
        lat = float(row["–®–∏—Ä–æ—Ç–∞"])
        lon = float(row["–î–æ–ª–≥–æ—Ç–∞"])
        stations[bs] = {"name": name, "lat": lat, "lon": lon}
    except:
        print(f"‚ö†Ô∏è –ü—Ä–æ–ø—É—â–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ë–°: {bs}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ë–°")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_input = update.message.text.strip()
    if user_input in stations:
        station = stations[user_input]
        name = station["name"]
        lat = station["lat"]
        lon = station["lon"]

        await update.message.reply_text(f"üè∑ –ë–°: {name}")
        map_url = f"https://yandex.ru/maps/?pt={lon},{lat}&z=16&l=map"
        await update.message.reply_text(f"üó∫ –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ä—Ç—ã:\n{map_url}")
    else:
        await update.message.reply_text("‚ùå –ë–° –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–±–µ–∑ –∑–∞–∫—Ä—ã—Ç–∏—è loop!)
async def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    await app.initialize()
    print("‚úÖ –ë–æ—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω.")
    await app.start()
    print("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    await app.updater.start_polling()
    await app.updater.wait_until_closed()
    await app.stop()
    await app.shutdown()

# Render-friendly –∑–∞–ø—É—Å–∫
if __name__ == "__main__":
    asyncio.run(main())
